#!/usr/bin/env -S rash --diff
#
# dots easy manage of your dotfiles.
# Usage:
#   ./dots (install|update|help) [<package_filters>...]
#
# Arguments:
#   package_filters   List of regex matching packages wanted.
#
# Options:
#   -c,--check  dry-run mode
#
# Example:
#   ./dots install --check '.*zsh.*'
#
# Subcommands:
#   install      Copy files to host.
#   update    Get files from host.
#   help         Show this screen.
#
- name: set vars
  set_vars:
    dotfiles_dir: "{{ rash.dir }}/dotfiles"
    templates_pattern: ".*\\.j2"

- name: create dotfiles directories
  when: install
  vars:
    dotfiles_dirs_query:
      paths: "{{ dotfiles_dir }}"
      hidden: true
      recurse: true
      excludes: dotfiles
      file_type: directory
  loop: "{{ find(dotfiles_dirs_query) }}"
  file:
    path: "{{ item | replace(dotfiles_dir, env.HOME) }}"
    state: "directory"

- set_vars:
    dotfiles_query:
      paths: "{{ dotfiles_dir }}"
      hidden: true
      patterns: "{{ package_filters | default(omit) }}"
      excludes: "{{ templates_pattern }}"
      recurse: true

- name: copy dotfiles
  when: install
  loop: "{{ find(dotfiles_query) }}"
  copy:
    src: "{{ item }}"
    dest: "{{ item | replace(dotfiles_dir, env.HOME) }}"
    mode: preserve

- name: render dotfiles templates
  when: install
  loop: "{{ find(dotfile_templates_query) }}"
  vars:
    dotfile_templates_query:
      paths: "{{ dotfiles_dir }}"
      hidden: true
      patterns: "{{ templates_pattern }}"
      recurse: true
  template:
    src: "{{ item }}"
    dest: "{{ item | replace(dotfiles_dir, env.HOME) | replace('.j2', '') }}"
    mode: preserve

- name: update dotfiles
  when: update
  loop: "{{ find(dotfiles_query) }}"
  copy:
    src: "{{ item | replace(dotfiles_dir, env.HOME) }}"
    dest: "{{ item }}"
    mode: preserve
